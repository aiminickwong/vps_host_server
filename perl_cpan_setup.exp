#!/usr/bin/expect -f
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet, etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.
set force_conservative 0  ;# set to 1 to force conservative mode even if script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}
# 2) differing output - Some programs produce different output each time they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to toggle this mode off and on.
set timeout -1
spawn $env(SHELL)
match_max 100000
send -- "rm -f /root/.cpan/.lock\r"
send -- "perl -MCPAN -e shell\r"
expect {
	"Would you like to configure as much as possible automatically" {send "yes\r"}
	"Would you like me to automatically choose some CPAN mirror\rsites for you" {send "yes\r\r"}
	"Are you ready for manual configuration?" {send "yes\r"}
	"CPAN build and cache directory?" {send "\r"}
	"Cache size for build directory" {send "\r"}
	"Perform cache scanning" {send "\r"}
	"Cache metadata" {send "yes\r"}
	"Your terminal expects ISO-8859-1" {send "yes\r"}
	"File to save your history" {send "\r"}
	"Number of lines to save" {send "\r"}
	"Policy on building prerequisites" {send "\r"}
	"Where is your gzip program" {send "\r"}
	"Where is your tar program" {send "\r"}
	"Where is your unzip program" {send "\r"}
	"Where is your make program" {send "\r"}
	"Where is your links program" {send "\r"}
	"Where is your wget program" {send "\r"}
	"Where is your ncftpget program" {send "\r"}
	"Where is your ncftp program" {send "\r"}
	"Where is your ftp program" {send "\r"}
	"Where is your gpg program" {send "\r"}
	"What is your favorite pager program" {send "\r"}
	"What is your favorite shell" {send "\r"}
	"Your choice" {send "\r"}
	"Timeout for inactivity during Makefile.PL" {send "\r"}
	"Your ftp_proxy" {send "\r"}
	"Your http_proxy" {send "\r"}
	"Your no_proxy" {send "\r"}
	"Shall I use the local database" {send "y\r"}
	"Select your continent" {send "4\r"}
	"Select your country" {send "4\r"}
	"Select as many URLs" {send "1 4 5\r"}
	"Enter another URL or RETURN to quit" {send "\r"}
	-re "cpan>|cpan\[.*\]>" {send "o conf commit\rquit\rexit\r"}
}
expect eof
